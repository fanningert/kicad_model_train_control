name: KitBot - PCB production file generation

on:
  push:
    tags:
      - '*'

jobs:
  Fabrication-Core:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Generate fabrication - Core
        uses: INTI-CMNB/KiBot@v2_k8
        with:
          config: kibot/base.kibot.yaml
          dir: pcb_core/Fabrication
          schema: 'pcb_core/project.kicad_sch'
          board: 'pcb_core/project.kicad_pcb'
          verbose: 0
      - name: Generate fabrication - Production
        uses: INTI-CMNB/KiBot@v2_k8
        with:
          config: kibot/production.kibot.yaml
          dir: pcb_core/Fabrication/production
          schema: 'pcb_core/project.kicad_sch'
          board: 'pcb_core/project.kicad_pcb'
          verbose: 0
      - name: Retrieve results
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: Fabrication_Controller
          path: |
            pcb_core/Fabrication/
          if-no-files-found: warn
          retention-days: 1
  Create-Release:
    runs-on: ubuntu-latest
    needs: [Fabrication-Core]
    steps:
      - name: Download assets
        uses: actions/download-artifact@v4
        with:
          path: .
          pattern: Fabrication_*
      - name: release
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          release_name: Release ${{ github.ref }}
          tag_name: ${{ github.ref }}
          draft: true
          prerelease: false
      - name: Upload Release Asset - Core
        id: upload-release-asset-core
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./Fabrication_Core.zip
          asset_name: Fabrication Core
          asset_content_type: application/zip
